<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:redisson="http://redisson.org/schema/redisson"
       xsi:schemaLocation="
   http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context.xsd
   http://redisson.org/schema/redisson
   http://redisson.org/schema/redisson/redisson.xsd">
    
    
    <!-- 加密方式. -->
    <bean id="stringCodec" class="org.redisson.client.codec.StringCodec"/>
    
    <!-- 单节点部署应用 -->
    <!--
    <redisson:client
            id="standalone"
            name="simpleClient"
            codec-ref="stringCodec">
        <redisson:single-server
                address="redis://101.201.177.32:16339"
                connection-pool-size="500"
                idle-connection-timeout="10000"
                connect-timeout="10000"
                timeout="3000"
                ping-timeout="30000"
                retry-attempts="10"
                password="02681330-d47f-4e34-a0fc-4a2f8931c523"
        />
    </redisson:client>
    <bean id="redissonFactory" class="com.application.base.cache.redisson.redisson.factory.RedissonInstanceSessionFactory">
        <property name="instanceClient" ref="standalone"/>
    </bean>
    <bean id="redissonDistLock" class="com.application.base.cache.redisson.redisson.lock.JDelegateDistributedLock">
        <property name="lockFactory" ref="redissonFactory"/>
    </bean>
    -->
    
    
    <!-- 哨兵部署应用 -->
    <!--
    <redisson:client
            id="sentinel"
            codec-ref="stringCodec">
        <redisson:sentinel-servers
                master-name="my-sentinel-name"
                idle-connection-timeout="10000"
                connect-timeout="10000"
                timeout="3000"
                ping-timeout="1000"
                retry-attempts="10"
        >
            <redisson:sentinel-address value="redis://127.0.0.1:26379" />
            <redisson:sentinel-address value="redis://127.0.0.1:26389" />
            <redisson:sentinel-address value="redis://127.0.0.1:26399" />
        </redisson:sentinel-servers>
    </redisson:client>
    <bean id="redissonFactory" class="com.application.base.cache.redisson.redisson.factory.RedissonInstanceSessionFactory">
        <property name="instanceClient" ref="sentinel"/>
    </bean>
    <bean id="redissonDistLock" class="com.application.base.cache.redisson.redisson.lock.JDelegateDistributedLock">
        <property name="lockFactory" ref="redissonFactory"/>
    </bean>
    -->
    
    
    <!-- 集群部署应用 -->
    <!--
    <redisson:client
            id="cluster"
            codec-ref="stringCodec">
        <redisson:cluster-servers
                idle-connection-timeout="10000"
                connect-timeout="10000"
                timeout="3000"
                ping-timeout="1000"
                retry-attempts="10"
        >
            <redisson:node-address value="redis://101.201.177.32:16339" />
            <redisson:node-address value="redis://127.0.0.1:6380" />
            <redisson:node-address value="redis://127.0.0.1:6381" />
            <redisson:node-address value="redis://127.0.0.1:6382" />
            <redisson:node-address value="redis://127.0.0.1:6383" />
            <redisson:node-address value="redis://127.0.0.1:6384" />
        </redisson:cluster-servers>
    </redisson:client>
    <bean id="redissonFactory" class="com.application.base.cache.redisson.redisson.factory.RedissonInstanceSessionFactory">
        <property name="instanceClient" ref="cluster"/>
    </bean>
    <bean id="redissonDistLock" class="com.application.base.cache.redisson.redisson.lock.JDelegateDistributedLock">
        <property name="lockFactory" ref="redissonFactory"/>
    </bean>
    -->
    
    <!-- 主从部署应用 -->
    <!--
    <redisson:client
            id="masterSlave"
            codec-ref="stringCodec">
        <redisson:master-slave-servers
                master-address="redis://101.201.177.32:16339"
                idle-connection-timeout="10000"
                connect-timeout="10000"
                timeout="3000"
                ping-timeout="1000"
                retry-attempts="10"
        >
            <redisson:slave-address value="redis://127.0.0.1:6380" />
            <redisson:slave-address value="redis://127.0.0.1:6381" />
        </redisson:master-slave-servers>
    </redisson:client>
    <bean id="redissonFactory" class="com.application.base.cache.redisson.redisson.factory.RedissonInstanceSessionFactory">
        <property name="instanceClient" ref="masterSlave"/>
    </bean>
    <bean id="redissonDistLock" class="com.application.base.cache.redisson.redisson.lock.JDelegateDistributedLock">
        <property name="lockFactory" ref="redissonFactory"/>
    </bean>
    -->
    
    <!-- 连接池基础信息配置 (公共使用) -->
    <bean id="commonConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}"/>
        <property name="numTestsPerEvictionRun" value="${redis.pool.numTestsPerEvictionRun}"/>
    </bean>
    
    
    
    <!-- 单节点部署应用 -->
    <bean id="simpleConfig" class="com.application.base.cache.redisson.redisson.pool.config.SimpleConfig">
        <property name="connectionPoolSize" value="${redisson.simple.connectionPoolSize}"/>
        <property name="idleConnectionTimeout" value="${redisson.simple.idleConnectionTimeout}"/>
        <property name="connectTimeout" value="${redisson.simple.connectTimeout}"/>
        <property name="timeout" value="${redisson.simple.timeout}"/>
        <property name="pingTimeout" value="${redisson.simple.pingTimeout}"/>
        <property name="reconnectionTimeout" value="${redisson.simple.reconnectionTimeout}"/>
        <property name="address" value="${redisson.simple.address}"/>
    </bean>
    <bean id="instancePool" class="com.application.base.cache.redisson.redisson.pool.RedissonInstancePool">
        <property name="config" ref="simpleConfig"/>
        <property name="poolConfig" ref="commonConfig"/>
        <constructor-arg name="config" ref="simpleConfig"/>
        <constructor-arg name="poolConfig" ref="commonConfig"/>
    </bean>
    <bean id="redissonFactory" class="com.application.base.cache.redisson.redisson.factory.RedissonInstanceSessionFactory">
        <property name="instancePool" ref="instancePool"/>
    </bean>
    <bean id="redissonDistLock" class="com.application.base.cache.redisson.redisson.lock.JDelegateDistributedLock">
        <property name="lockFactory" ref="redissonFactory"/>
    </bean>
    
    
    <!-- 哨兵部署应用 -->
    <!--
    <bean id="sentinelConfig" class="com.application.base.cache.redisson.redisson.pool.config.SentinelConfig">
        <property name="masterConnectionPoolSize" value="${redisson.sentinel.masterConnectionPoolSize}"/>
        <property name="slaveConnectionPoolSize" value="${redisson.sentinel.slaveConnectionPoolSize}"/>
        <property name="idleConnectionTimeout" value="${redisson.sentinel.idleConnectionTimeout}"/>
        <property name="connectTimeout" value="${redisson.sentinel.connectTimeout}"/>
        <property name="timeout" value="${redisson.sentinel.timeout}"/>
        <property name="pingTimeout" value="${redisson.sentinel.pingTimeout}"/>
        <property name="reconnectionTimeout" value="${redisson.sentinel.reconnectionTimeout}"/>
        <property name="hostInfos" value="${redisson.sentinel.hostInfos}"/>
        <property name="masterName" value="${redisson.sentinel.masterName}"/>
    </bean>
    <bean id="instancePool" class="com.application.base.cache.redisson.redisson.pool.RedissonInstancePool">
        <property name="config" ref="sentinelConfig"/>
        <property name="poolConfig" ref="commonConfig"/>
        <constructor-arg name="config" ref="sentinelConfig"/>
        <constructor-arg name="poolConfig" ref="commonConfig"/>
    </bean>
    <bean id="redissonFactory" class="com.application.base.cache.redisson.redisson.factory.RedissonInstanceSessionFactory">
        <property name="instancePool" ref="instancePool"/>
    </bean>
    <bean id="redissonDistLock" class="com.application.base.cache.redisson.redisson.lock.JDelegateDistributedLock">
        <property name="lockFactory" ref="redissonFactory"/>
    </bean>
    -->
    
    
    <!-- 主从部署应用 -->
    <!--
    <bean id="masterSlavelConfig" class="com.application.base.cache.redisson.redisson.pool.config.MasterSlaveConfig">
        <property name="masterConnectionPoolSize" value="${redisson.masterslave.masterConnectionPoolSize}"/>
        <property name="slaveConnectionPoolSize" value="${redisson.masterslave.slaveConnectionPoolSize}"/>
        <property name="idleConnectionTimeout" value="${redisson.masterslave.idleConnectionTimeout}"/>
        <property name="connectTimeout" value="${redisson.masterslave.connectTimeout}"/>
        <property name="timeout" value="${redisson.masterslave.timeout}"/>
        <property name="pingTimeout" value="${redisson.masterslave.pingTimeout}"/>
        <property name="reconnectionTimeout" value="${redisson.masterslave.reconnectionTimeout}"/>
        <property name="hostInfos" value="${redisson.masterslave.hostInfos}"/>
        <property name="masterAddr" value="${redisson.masterslave.masterAddr}"/>
    </bean>
    <bean id="instancePool" class="com.application.base.cache.redisson.redisson.pool.RedissonInstancePool">
        <property name="config" ref="masterSlavelConfig"/>
        <property name="poolConfig" ref="commonConfig"/>
        <constructor-arg name="config" ref="masterSlavelConfig"/>
        <constructor-arg name="poolConfig" ref="commonConfig"/>
    </bean>
    <bean id="redissonFactory" class="com.application.base.cache.redisson.redisson.factory.RedissonInstanceSessionFactory">
        <property name="instancePool" ref="instancePool"/>
    </bean>
    <bean id="redissonDistLock" class="com.application.base.cache.redisson.redisson.lock.JDelegateDistributedLock">
        <property name="lockFactory" ref="redissonFactory"/>
    </bean>
    -->
    
    
    <!-- 集群部署应用 -->
    <!--
    <bean id="clusterConfig" class="com.application.base.cache.redisson.redisson.pool.config.ClusterConfig">
        <property name="masterConnectionPoolSize" value="${redisson.cluster.masterConnectionPoolSize}"/>
        <property name="slaveConnectionPoolSize" value="${redisson.cluster.slaveConnectionPoolSize}"/>
        <property name="idleConnectionTimeout" value="${redisson.cluster.idleConnectionTimeout}"/>
        <property name="connectTimeout" value="${redisson.cluster.connectTimeout}"/>
        <property name="timeout" value="${redisson.cluster.timeout}"/>
        <property name="pingTimeout" value="${redisson.cluster.pingTimeout}"/>
        <property name="reconnectionTimeout" value="${redisson.cluster.reconnectionTimeout}"/>
        <property name="hostInfos" value="${redisson.cluster.hostInfos}"/>
    </bean>
    <bean id="instancePool" class="com.application.base.cache.redisson.redisson.pool.RedissonInstancePool">
        <property name="config" ref="clusterConfig"/>
        <property name="poolConfig" ref="commonConfig"/>
        <constructor-arg name="config" ref="clusterConfig"/>
        <constructor-arg name="poolConfig" ref="commonConfig"/>
    </bean>
    <bean id="redissonFactory" class="com.application.base.cache.redisson.redisson.factory.RedissonInstanceSessionFactory">
        <property name="instancePool" ref="instancePool"/>
    </bean>
    <bean id="redissonDistLock" class="com.application.base.cache.redisson.redisson.lock.JDelegateDistributedLock">
        <property name="lockFactory" ref="redissonFactory"/>
    </bean>
    -->
    
    
    <!-- 云托部署应用 -->
    <!--
    <bean id="cloudConfig" class="com.application.base.cache.redisson.redisson.pool.config.CloudConfig">
        <property name="masterConnectionPoolSize" value="${redisson.cloud.masterConnectionPoolSize}"/>
        <property name="slaveConnectionPoolSize" value="${redisson.cloud.slaveConnectionPoolSize}"/>
        <property name="idleConnectionTimeout" value="${redisson.cloud.idleConnectionTimeout}"/>
        <property name="connectTimeout" value="${redisson.cloud.connectTimeout}"/>
        <property name="timeout" value="${redisson.cloud.timeout}"/>
        <property name="pingTimeout" value="${redisson.cloud.pingTimeout}"/>
        <property name="reconnectionTimeout" value="${redisson.cloud.reconnectionTimeout}"/>
        <property name="hostInfos" value="${redisson.cloud.hostInfos}"/>
    </bean>
    <bean id="instancePool" class="com.application.base.cache.redisson.redisson.pool.RedissonInstancePool">
        <property name="config" ref="cloudConfig"/>
        <property name="poolConfig" ref="commonConfig"/>
        <constructor-arg name="config" ref="cloudConfig"/>
        <constructor-arg name="poolConfig" ref="commonConfig"/>
    </bean>
    <bean id="redissonFactory" class="com.application.base.cache.redisson.redisson.factory.RedissonInstanceSessionFactory">
        <property name="instancePool" ref="instancePool"/>
    </bean>
    <bean id="redissonDistLock" class="com.application.base.cache.redisson.redisson.lock.JDelegateDistributedLock">
        <property name="lockFactory" ref="redissonFactory"/>
    </bean>
    -->

</beans>

