<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans.xsd
   		http://www.springframework.org/schema/context 
   		http://www.springframework.org/schema/context/spring-context.xsd">
    
    
    
    <!-- redis 基础信息配置 (公共使用) -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}"/>
        <property name="numTestsPerEvictionRun" value="${redis.pool.numTestsPerEvictionRun}"/>
    </bean>
    
    
    <!-- 1. redis 单点服务器,只存在一个redis的服务器 -->
    
    <bean id = "jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="host" value="${redis.host}"/>
        <constructor-arg name="port" value="${redis.port}"/>
        <constructor-arg name="timeout" value="${redis.timeout}"/>
        <constructor-arg name="password" value="${redis.password}"/>
    </bean>
    <bean id="redisFactory" class="com.application.base.cache.redis.jedis.factory.JedisSimpleSessionFactory">
        <property name="jedisPool" ref="jedisPool"/>
    </bean>
    <bean id="distributedLock" class="com.application.base.cache.redis.jedis.lock.DelegateDistributedLock">
        <property name="sessionFactory" ref="redisFactory"/>
    </bean>
    
    
    <!--2. redis 哨兵模式,有一个哨兵的redis服务可以调用,版本一-->
    <!--
	  <bean id="sentinelPoolOne" class="redis.clients.jedis.JedisSentinelPool">
		   <constructor-arg name="masterName" value="${redis.sentinel.mastername}"/>
		   <constructor-arg name="sentinels">
			   <set>
				   <value>${redis.sentinel.a.infos}</value>
				   <value>${redis.sentinel.b.infos}</value>
			   </set>
		   </constructor-arg>
		   <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
		   <constructor-arg name="timeout" value="${redis.timeout}"/>
	   </bean>
	   <bean id="redisFactory" class="com.application.base.cache.redis.jedis.factory.JedisSimpleSessionFactory">
		   <property name="pools" ref="sentinelPoolOne"/>
	   </bean>
	   <bean id="distributedLock" class="com.application.base.cache.redis.jedis.lock.DelegateDistributedLock">
		   <property name="sessionFactory" ref="redisFactory"/>
	   </bean>
	   -->
    
    <!--3. redis 哨兵模式,有一个哨兵的redis服务可以调用,版本二-->
    <!--
    <bean id="sentinelPoolTwo" class="com.application.base.cache.redis.jedis.factory.JedisSentinelFactory">
        <constructor-arg name="masterName" value="${redis.sentinel.mastername}"/>
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="timeout" value="${redis.timeout}"/>
        <constructor-arg name="hostInfos" value="${redis.sentinel.instances}"/>
    </bean>
    <bean id="redisFactory" class="com.application.base.cache.redis.jedis.factory.JedisSentinelSessionFactory">
        <property name="sentinelPool" ref="sentinelPoolTwo"/>
    </bean>
    <bean id="distributedLock" class="com.application.base.cache.redis.jedis.lock.DelegateDistributedLock">
        <property name="sessionFactory" ref="redisFactory"/>
    </bean>
    -->
    
    <!--3. redis集群模式,有一个redis的集群服务器组可以使用 -->
    <!--
    <bean id="clusterPool" class="com.application.base.cache.redis.jedis.factory.cluster.RedisClusterPool">
        <property name="hostInfos" value="${redis.cluster.hostinfos}"/>
        <property name="timeout" value="${redis.cluster.timeout}"/>
        <property name="sotimeout" value="${redis.cluster.sotimeout}"/>
        <property name="maxattempts" value="${redis.cluster.maxattempts}"/>
        <property name="passWord" value="${redis.cluster.password}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>
    <bean id="redisFactory" class="com.application.base.cache.redis.jedis.factory.JedisClusterSessionFactory">
        <property name="clusterPool" ref="clusterPool"/>
    </bean>
    <bean id="distributedLock" class="com.application.base.cache.redis.jedis.lock.DelegateDistributedLock">
        <property name="sessionFactory" ref="redisFactory"/>
    </bean>
    -->
    
    <!--4. redis分片模式,有一个redis的分片模式服务器组可以使用 -->
    <!--
    <bean id="shardedPool" class="com.application.base.cache.redis.jedis.factory.JedisShardedFactory">
        <property name="hostInfos" value="${redis.sharded.hostinfos}"/>
        <property name="timeout" value="${redis.sharded.timeout}"/>
        <property name="sotimeout" value="${redis.sharded.sotimeout}"/>
        <property name="maxattempts" value="${redis.sharded.maxattempts}"/>
        <property name="passWords" value="${redis.sharded.passwords}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>
    <bean id="redisFactory" class="com.application.base.cache.redis.jedis.factory.JedisShardedSessionFactory">
        <property name="shardedPool" ref="shardedPool"/>
    </bean>
    <bean id="distributedLock" class="com.application.base.cache.redis.jedis.lock.DelegateDistributedLock">
        <property name="sessionFactory" ref="redisFactory"/>
    </bean>
    -->


</beans>

